<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Algorithm | Moshe's Blog]]></title>
  <link href="http://kolodny.github.io/blog/blog/categories/algorithm/atom.xml" rel="self"/>
  <link href="http://kolodny.github.io/blog/"/>
  <updated>2015-09-10T10:28:56-04:00</updated>
  <id>http://kolodny.github.io/blog/</id>
  <author>
    <name><![CDATA[Moshe Kolodny]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Circular Doubly Linked List]]></title>
    <link href="http://kolodny.github.io/blog/blog/2013/10/18/circular-doubly-linked-list/"/>
    <updated>2013-10-18T11:10:00-04:00</updated>
    <id>http://kolodny.github.io/blog/blog/2013/10/18/circular-doubly-linked-list</id>
    <content type="html"><![CDATA[<p>I was working on a cycling plugin for javascript and kept getting bogged down by accessing the prev and next elements in the array. I kept having to do things like:
<div>
  <pre><code class='javascript'>function step() {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var currentItem = items[currentIndex];
var nextItem = items[(currentIndex + 1) % items.length];
var prevItem = items[(items.length + currentIndex - 1) % items.length];
// more code
index = (index + 1) % items.length
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}</code></pre>
</div>
</p>

<p>While this is doable it just seems like a pain.<br/>
Giving it more thought I realized that a <a href="http://en.wikipedia.org/wiki/Linked_list#Circular_list">circular doubly linked list</a> would be a great solution to this:</p>

<div data-height="257" data-theme-id="1527" data-slug-hash="cGdke" data-user="kolodny" data-default-tab="js" class='codepen'><pre><code>

var list = [{label: &#x27;first&#x27;}, {label: &#x27;second&#x27;}, {label: &#x27;third&#x27;}];
var circled = circleLink(list);

assert(circled[0].next === circled[1]);
assert(circled[1].next === circled[2]);
assert(circled[2].next === circled[0]);

assert(circled[0].prev === circled[2]);
assert(circled[1].prev === circled[0]);
assert(circled[2].prev === circled[1]);

document.write(circled[0].index + &#x27;&lt;br&gt;&#x27;);
document.write(circled[1].index + &#x27;&lt;br&gt;&#x27;);
document.write(circled[2].index + &#x27;&lt;br&gt;&#x27;);
document.write(circled[0].next.next.next.prev.prev.index + &#x27;&lt;br&gt;&#x27;);

function circleLink(array) {
  var linkedListCircle = []
  for (var i = 0; i &lt; array.length; i++) {
    linkedListCircle[i] = array[i];
    linkedListCircle[i].index = i;
    if (i &gt; 0) {
      linkedListCircle[i].prev = linkedListCircle[i - 1];
    }
  }
  linkedListCircle[0].prev = linkedListCircle[i - 1]
  for (var i = 0; i &lt; array.length - 1; i++) {
    linkedListCircle[i].next = linkedListCircle[i + 1];
  }
  linkedListCircle[i].next = linkedListCircle[0];
  return linkedListCircle;
}
function assert(assertion) { document.write((assertion ? true : false) + &#x27;&lt;br&gt;&#x27;) }
</code></pre>
<p>See the Pen <a href='http://codepen.io/kolodny/pen/cGdke'>%= penName %></a> by Moshe Kolodny (<a href='http://codepen.io/kolodny'>@kolodny</a>) on <a href='http://codepen.io'>CodePen</a></p>
</div>


<script async src="https://codepen.io/assets/embed/ei.js"></script>

]]></content>
  </entry>
  
</feed>
